var fragment = "in vec2 vMaskCoord;\r\nin vec2 vTextureCoord;\r\n\r\nuniform sampler2D uTexture;\r\nuniform sampler2D uMaskTexture;\r\n\r\nuniform float uAlpha;\r\nuniform vec4 uMaskClamp;\r\n\r\nout vec4 finalColor;\r\n\r\nvoid main(void)\r\n{\r\n    float clip = step(3.5,\r\n        step(uMaskClamp.x, vMaskCoord.x) +\r\n        step(uMaskClamp.y, vMaskCoord.y) +\r\n        step(vMaskCoord.x, uMaskClamp.z) +\r\n        step(vMaskCoord.y, uMaskClamp.w));\r\n\r\n    // TODO look into why this is needed\r\n    float npmAlpha = uAlpha; \r\n    vec4 original = texture(uTexture, vTextureCoord);\r\n    vec4 masky = texture(uMaskTexture, vMaskCoord);\r\n    float alphaMul = 1.0 - npmAlpha * (1.0 - masky.a);\r\n\r\n    original *= (alphaMul * masky.r * uAlpha * clip);\r\n\r\n    finalColor = original;\r\n}\r\n";

export { fragment as default };
//# sourceMappingURL=mask.frag.mjs.map
