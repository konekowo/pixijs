var fragment = "\r\nin vec2 vTextureCoord;\r\nin vec4 vColor;\r\n\r\nout vec4 finalColor;\r\n\r\nuniform float uColorMatrix[20];\r\nuniform float uAlpha;\r\n\r\nuniform sampler2D uTexture;\r\n\r\nfloat rand(vec2 co)\r\n{\r\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\r\n}\r\n\r\nvoid main()\r\n{\r\n    vec4 color = texture(uTexture, vTextureCoord);\r\n    float randomValue = rand(gl_FragCoord.xy * 0.2);\r\n    float diff = (randomValue - 0.5) *  0.5;\r\n\r\n    if (uAlpha == 0.0) {\r\n        finalColor = color;\r\n        return;\r\n    }\r\n\r\n    if (color.a > 0.0) {\r\n        color.rgb /= color.a;\r\n    }\r\n\r\n    vec4 result;\r\n\r\n    result.r = (uColorMatrix[0] * color.r);\r\n        result.r += (uColorMatrix[1] * color.g);\r\n        result.r += (uColorMatrix[2] * color.b);\r\n        result.r += (uColorMatrix[3] * color.a);\r\n        result.r += uColorMatrix[4];\r\n\r\n    result.g = (uColorMatrix[5] * color.r);\r\n        result.g += (uColorMatrix[6] * color.g);\r\n        result.g += (uColorMatrix[7] * color.b);\r\n        result.g += (uColorMatrix[8] * color.a);\r\n        result.g += uColorMatrix[9];\r\n\r\n    result.b = (uColorMatrix[10] * color.r);\r\n       result.b += (uColorMatrix[11] * color.g);\r\n       result.b += (uColorMatrix[12] * color.b);\r\n       result.b += (uColorMatrix[13] * color.a);\r\n       result.b += uColorMatrix[14];\r\n\r\n    result.a = (uColorMatrix[15] * color.r);\r\n       result.a += (uColorMatrix[16] * color.g);\r\n       result.a += (uColorMatrix[17] * color.b);\r\n       result.a += (uColorMatrix[18] * color.a);\r\n       result.a += uColorMatrix[19];\r\n\r\n    vec3 rgb = mix(color.rgb, result.rgb, uAlpha);\r\n\r\n    // Premultiply alpha again.\r\n    rgb *= result.a;\r\n\r\n    finalColor = vec4(rgb, result.a);\r\n}\r\n";

export { fragment as default };
//# sourceMappingURL=colorMatrixFilter.frag.mjs.map
